{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/promise-polyfill/promise.js","src/js/app.js","src/js/calculator.js","src/js/currency/currency.js","src/js/currency/currencyManager.js","src/js/currency/currencyUpdater.js","src/js/logger.js","src/js/settings.js","src/js/signal.js","src/js/termsMgr.js","src/js/utils.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzOA;;;;;;;;;;;;;;;;;;;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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (root) {\n\n  // Store setTimeout reference so promise-polyfill will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var setTimeoutFunc = setTimeout;\n\n  function noop() {}\n  \n  // Polyfill for Function.prototype.bind\n  function bind(fn, thisArg) {\n    return function () {\n      fn.apply(thisArg, arguments);\n    };\n  }\n\n  function Promise(fn) {\n    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n    if (typeof fn !== 'function') throw new TypeError('not a function');\n    this._state = 0;\n    this._handled = false;\n    this._value = undefined;\n    this._deferreds = [];\n\n    doResolve(fn, this);\n  }\n\n  function handle(self, deferred) {\n    while (self._state === 3) {\n      self = self._value;\n    }\n    if (self._state === 0) {\n      self._deferreds.push(deferred);\n      return;\n    }\n    self._handled = true;\n    Promise._immediateFn(function () {\n      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n      if (cb === null) {\n        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n        return;\n      }\n      var ret;\n      try {\n        ret = cb(self._value);\n      } catch (e) {\n        reject(deferred.promise, e);\n        return;\n      }\n      resolve(deferred.promise, ret);\n    });\n  }\n\n  function resolve(self, newValue) {\n    try {\n      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n        var then = newValue.then;\n        if (newValue instanceof Promise) {\n          self._state = 3;\n          self._value = newValue;\n          finale(self);\n          return;\n        } else if (typeof then === 'function') {\n          doResolve(bind(then, newValue), self);\n          return;\n        }\n      }\n      self._state = 1;\n      self._value = newValue;\n      finale(self);\n    } catch (e) {\n      reject(self, e);\n    }\n  }\n\n  function reject(self, newValue) {\n    self._state = 2;\n    self._value = newValue;\n    finale(self);\n  }\n\n  function finale(self) {\n    if (self._state === 2 && self._deferreds.length === 0) {\n      Promise._immediateFn(function() {\n        if (!self._handled) {\n          Promise._unhandledRejectionFn(self._value);\n        }\n      });\n    }\n\n    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n      handle(self, self._deferreds[i]);\n    }\n    self._deferreds = null;\n  }\n\n  function Handler(onFulfilled, onRejected, promise) {\n    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n    this.promise = promise;\n  }\n\n  /**\n   * Take a potentially misbehaving resolver function and make sure\n   * onFulfilled and onRejected are only called once.\n   *\n   * Makes no guarantees about asynchrony.\n   */\n  function doResolve(fn, self) {\n    var done = false;\n    try {\n      fn(function (value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      }, function (reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      });\n    } catch (ex) {\n      if (done) return;\n      done = true;\n      reject(self, ex);\n    }\n  }\n\n  Promise.prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n\n  Promise.prototype.then = function (onFulfilled, onRejected) {\n    var prom = new (this.constructor)(noop);\n\n    handle(this, new Handler(onFulfilled, onRejected, prom));\n    return prom;\n  };\n\n  Promise.all = function (arr) {\n    var args = Array.prototype.slice.call(arr);\n\n    return new Promise(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        try {\n          if (val && (typeof val === 'object' || typeof val === 'function')) {\n            var then = val.then;\n            if (typeof then === 'function') {\n              then.call(val, function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n          args[i] = val;\n          if (--remaining === 0) {\n            resolve(args);\n          }\n        } catch (ex) {\n          reject(ex);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  Promise.resolve = function (value) {\n    if (value && typeof value === 'object' && value.constructor === Promise) {\n      return value;\n    }\n\n    return new Promise(function (resolve) {\n      resolve(value);\n    });\n  };\n\n  Promise.reject = function (value) {\n    return new Promise(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  Promise.race = function (values) {\n    return new Promise(function (resolve, reject) {\n      for (var i = 0, len = values.length; i < len; i++) {\n        values[i].then(resolve, reject);\n      }\n    });\n  };\n\n  // Use polyfill for setImmediate for performance gains\n  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||\n    function (fn) {\n      setTimeoutFunc(fn, 0);\n    };\n\n  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n    if (typeof console !== 'undefined' && console) {\n      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n    }\n  };\n\n  /**\n   * Set the immediate function to execute callbacks\n   * @param fn {function} Function to execute\n   * @deprecated\n   */\n  Promise._setImmediateFn = function _setImmediateFn(fn) {\n    Promise._immediateFn = fn;\n  };\n\n  /**\n   * Change the function to execute on unhandled rejection\n   * @param {function} fn Function to execute on unhandled rejection\n   * @deprecated\n   */\n  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n    Promise._unhandledRejectionFn = fn;\n  };\n  \n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = Promise;\n  } else if (!root.Promise) {\n    root.Promise = Promise;\n  }\n\n})(this);\n","/*\r\nMIT License\r\n\r\nCopyright (c) 2017 Ivo Cass\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\n\"use strict\"\r\n\r\nimport Promise from 'promise-polyfill'; \r\nimport app from './app';\r\n\r\nimport logger from './logger';\r\n\r\nimport Signal from './signal';\r\nimport TermsMgr from './termsMgr';\r\nimport Calculator from './calculator';\r\nimport Settings from './settings';\r\n// import quoteGenerator from './quoteGenerator';\r\nimport Currency from './currency/currency';\r\nimport CurrencyManager from './currency/currencyManager';\r\n\r\n\r\n\r\nVue.config.devtools = false;\r\n\r\n// ie polyfill\r\nif (!window.Promise) {\r\nwindow.Promise = Promise;\r\n}\r\n\r\n// ie polyfill\r\nNumber.isInteger = Number.isInteger || function(value) {\r\n    return typeof value === \"number\" &&\r\n           isFinite(value) &&\r\n           Math.floor(value) === value;\r\n};\r\n\r\n\r\nvar App = function(){\r\n\r\n    log('App()');    \r\n    \r\n    this.config = new Config();\r\n    this.data;\r\n\r\n    var hasInitialized = false;    \r\n    var termsMgr;\r\n    var currencyManager;\r\n    var settings;\r\n    var calc;\r\n\r\n    this.currencyUpdated = new Signal();\r\n    this.currencySelected = new Signal();\r\n    this.currencySliderToggled = new Signal();\r\n    this.currencyModified = new Signal();\r\n    this.settingsChanged = new Signal();\r\n    this.saveSettingRequested = new Signal();\r\n\r\n    this.init = function(){\r\n\r\n        log('App - init()');\r\n\r\n        if(hasInitialized) return;\r\n        hasInitialized = true;\r\n\r\n        logger.setMaxEntries(this.config.loggerMaxEntries);\r\n\r\n        this.data = new Vue({\r\n        el: '#app',\r\n        data: {\r\n            termsAndConditions:\"cargando..\",\r\n            hasAcceptedTerms:false,\r\n            alternativeDesignEnabled:false,\r\n            alternateDetailsEnabled:false,\r\n            mainColor:'#10c77b',\r\n            currency:new Currency('USD'), // dummy currency for Vue, until the current one is set\r\n            currencyUSD:new Currency('USD'),\r\n            currencyEUR:new Currency('EUR'),\r\n            currencyGBP:new Currency('GBP'),            \r\n            currencyARS:new Currency('ARS'),\r\n            currencies:[], \r\n            selectOptionUSD:'USD (Dólar) - $...',\r\n            selectOptionEUR:'EUR (Euro) - $...',\r\n            selectOptionGBP:'GBP (Libra) - $...',\r\n            selectOptionARS:'ARS (Peso)',\r\n            valCompra:app.config.defaultPurchase,\r\n            valCurrencyConversion:0,        \r\n            valCurrencyConversionText:'$0',        \r\n            valAfip:0,\r\n            valCorreo:app.config.gestionCorreo,\r\n            valFranquicia:0,\r\n            valTotal:0,\r\n            showCompraPesos:true,\r\n            showAfip:true,\r\n            showCorreo:true,\r\n            showFranquicia:true,\r\n            showInfoIcons:true,\r\n            showCheckboxes:true,\r\n            infoModalTitle:'',\r\n            valCompraMax:app.config.valCompraMax,\r\n            isCompraOutOfRange:false,\r\n            showingSettings:false,\r\n            version:app.config.version\r\n        },\r\n        methods: {\r\n            \r\n            // settings\r\n            setMainColor:function(color){settings.setMainColor(color)},                    \r\n            onCurrencyModified:function(event, id){settings.onCurrencyModified(event, id)},\r\n            toggleDesign:function(){settings.toggleDesign()},\r\n            toggleCustomCurrency:function(id){settings.toggleCustomCurrency(id)},\r\n            toggleInfoIcons:function(){settings.toggleInfoIcons()},\r\n            toggleCheckboxes:function(){settings.toggleCheckboxes()},\r\n\r\n            // termsMgr\r\n            onTermsCheckboxClicked:function(){termsMgr.onTermsCheckboxClicked()},\r\n            onWelcomeContinueClicked:function(){termsMgr.onWelcomeContinueClicked()},\r\n            \r\n            // app\r\n            openSettings:function(color){app.data.showingSettings = true},\r\n            closeSettings:function(color){app.data.showingSettings = false},    \r\n            showDetailsSection:function(){app.data.alternateDetailsEnabled = true},\r\n            hideDetailsSection:function(){app.data.alternateDetailsEnabled = false},\r\n            onFacebookClicked:function(){app.onFacebookClicked()},\r\n            onExtensionClicked:function(name){app.onExtensionClicked(name)},\r\n\r\n            // currencyManager\r\n            onCurrencySelected:function(e){currencyManager.onCurrencySelected(e)},\r\n            updateCurrency:function(id){currencyManager.updateCurrency(id)},\r\n\r\n            // calc\r\n            onLabelClicked:function(name){calc.onLabelClicked(name)},\r\n            showInfoModal:function(id){calc.showInfoModal(id)},\r\n        }\r\n     });\r\n\r\n        if(!this.config.loggerEnabled){\r\n            logger.disable();\r\n        }\r\n\r\n        termsMgr = new TermsMgr();\r\n        currencyManager = new CurrencyManager();\r\n        settings = new Settings();\r\n        calc = new Calculator();\r\n    };\r\n\r\n    this.onFacebookClicked = function(){\r\n        ga('send', {\r\n            hitType: 'event',\r\n            eventCategory: 'Facebook',\r\n            eventAction: 'Clicked'\r\n        });\r\n\r\n        window.open('https://www.facebook.com/CalculoCompras','_blank');\r\n    };\r\n\r\n    this.onExtensionClicked = function(browserName){\r\n        ga('send', {\r\n            hitType: 'event',\r\n            eventCategory: 'Extension',\r\n            eventAction: 'Clicked',\r\n            eventLabel:browserName\r\n        });\r\n    };\r\n    \r\n}\r\n\r\nexport default new App();\r\n\r\n// $(document).ready(app.init);\r\n\r\napp.init();","/*\r\nMIT License\r\n\r\nCopyright (c) 2017 Ivo Cass\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\nimport app from './app';\r\nimport utils from './utils';\r\n\r\nexport default function Calculator(){\r\n    \r\n    log('Calculator()');\r\n\r\n    // todo: use better names to identify html elements\r\n    var priceCompraInput;\r\n    var currencyConversionText;\r\n    var priceAfip;\r\n    var priceCorreo;\r\n    var priceFranquicia;\r\n    var valTotalSpan;    \r\n    var data = null;\r\n    var prevInput = '';\r\n\r\n    \r\n\r\n    function init(){\r\n\r\n        log('Calculator - init()');\r\n\r\n        data = app.data;\r\n        \r\n        priceCompraInput = $('#price-compra-input').get(0);\r\n        currencyConversionText = $('#currency-conversion-text').get(0);\r\n        priceAfip = $('#price-afip').get(0);\r\n        priceCorreo = $('#price-correo').get(0);\r\n        priceFranquicia = $('#price-franquicia').get(0);\r\n        valTotalSpan = $('#val-total').get(0);\r\n        prevInput = data.valCompra;\r\n        \r\n        document.body.addEventListener('wheel', mouseWheelListener);\r\n        priceCompraInput.addEventListener('keyup', onPriceCompraInputChanged);\r\n\r\n        app.currencyUpdated.add(onCurrencyUpdated);\r\n        app.settingsChanged.add(updateTotal);\r\n                \r\n        updatePrice(priceCompraInput, data.valCompra);\r\n\r\n        processNewCompraVal();\r\n                \r\n        updateTotal();\r\n\r\n        if(app.config.runTests){\r\n            runTests();\r\n        }\r\n        \r\n        \r\n        app.currencySelected.add(processNewCompraVal);\r\n    }\r\n\r\n    init();\r\n    \r\n    this.showInfoModal = function(id){\r\n        \r\n        $('.info-modal-content').addClass('d-none');\r\n\r\n        data.infoModalTitle = $(id).data('title');\r\n        \r\n        $(id).removeClass('d-none');\r\n    }\r\n\r\n    function onCurrencyUpdated(){\r\n\r\n        log('Calculator() - onCurrencyUpdated()');\r\n\r\n        processNewCompraVal();\r\n    }\r\n\r\n    function onPriceCompraInputChanged(e){\r\n        \r\n        // firefox allows other characters in input even with type=\"number\"\r\n        // this code helps (but first needs to be tested in mac and mobile)\r\n        // var key = e.keyCode;\r\n        // const KEY_BACKSPACE = 8;\r\n        // const KEY_DEL = 46;\r\n        // const KEY_PERIOD = 190;\r\n        // const KEY_NUMPAD_PERIOD = 110;        \r\n        // const KEY_HOME = 36;\r\n        // const KEY_END = 35;\r\n\r\n        // // numbers, numpad numbers, arrows\r\n        // var allowedKeys = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, KEY_BACKSPACE, KEY_DEL, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, KEY_PERIOD, KEY_NUMPAD_PERIOD, 37, 38, 39, 40, KEY_HOME, KEY_END];\r\n\r\n        // if (allowedKeys.indexOf(key) == -1)\r\n        // {\r\n        //     priceCompraInput.value = prevInput;\r\n            \r\n        //     return;\r\n        // }\r\n\r\n        // prevInput = priceCompraInput.value;\r\n\r\n        processNewCompraVal();\r\n    }\r\n\r\n    function processNewCompraVal(){\r\n\r\n        log('Calculator() - processNewCompraVal()', priceCompraInput.value);\r\n\r\n        if(Number(priceCompraInput.value) < 0){\r\n            priceCompraInput.value = 0;\r\n        }\r\n\r\n        data.valCompra = Number(priceCompraInput.value);         \r\n\r\n        data.isCompraOutOfRange = getIsCompraOutOfRange();\r\n\r\n        updateTotal();\r\n    }\r\n\r\n    function mouseWheelListener(e){\r\n\r\n        if(data.showingSettings || !data.hasAcceptedTerms){\r\n            return;\r\n        }\r\n        \r\n        let val = Number(priceCompraInput.value);\r\n\r\n        var step = 1;\r\n\r\n        if(e.shiftKey){\r\n            step = 10;\r\n        }\r\n        else\r\n        if(e.altKey){\r\n            step = 0.1;\r\n        }\r\n\r\n        if(e.deltaY < 0){\r\n            val += step;\r\n        }\r\n        else{\r\n            val -= step;\r\n        }\r\n\r\n        if(val < 0){\r\n            val = 0;\r\n        }\r\n\r\n        val = formatPrice(val);\r\n\r\n        priceCompraInput.value = val;\r\n\r\n        processNewCompraVal();\r\n    }\r\n\r\n    this.onLabelClicked = function(name){\r\n        \r\n        log('Calculator - onLabelClicked', name);\r\n\r\n        switch(name){\r\n            \r\n            case 'afip':\r\n                data.showAfip = !data.showAfip;\r\n            break;\r\n            \r\n            case 'correo':\r\n                data.showCorreo = !data.showCorreo;\r\n            break;\r\n            \r\n            case 'franquicia':\r\n                data.showFranquicia = !data.showFranquicia;\r\n\r\n                app.saveSettingRequested.dispatch({name:'showFranquicia', value:data.showFranquicia});\r\n            break;\r\n        }\r\n\r\n        updateTotal();\r\n    }\r\n\r\n    // todo: stop using english and spanish for f#$k's sake...\r\n    function getIsCompraOutOfRange(){\r\n\r\n        // get valCompra in USD\r\n        var valCompraUSD = data.valCompra;\r\n        \r\n        // if we are not using USD\r\n        if(data.currency != data.currencyUSD){\r\n\r\n            let valCompraARS = data.valCompra;\r\n            \r\n            // if we are not using ARS\r\n            if(data.currency != data.currencyARS){\r\n\r\n                // convert to ARS\r\n                valCompraARS = data.valCompra * data.currency.getCurrentVal();\r\n            }\r\n            \r\n            // then convert to USD\r\n            valCompraUSD = valCompraARS / data.currencyUSD.getCurrentVal();\r\n            \r\n        }\r\n\r\n        if(valCompraUSD > data.valCompraMax){\r\n\r\n            log('Calculator - getIsCompraOutOfRange()', data.valCompra, valCompraUSD, true);\r\n            return true;\r\n        }\r\n\r\n        log('Calculator - getIsCompraOutOfRange()', data.valCompra, valCompraUSD, false);\r\n\r\n        return false;\r\n    }\r\n\r\n    function updatePrice(priceLabel, value){\r\n\r\n        // console.log('Calculator - updatePrice()', priceLabel, value);\r\n\r\n        value = formatPrice(value);\r\n\r\n        if(priceLabel.tagName == 'INPUT'){\r\n            priceLabel.value = value;\r\n        }\r\n        else{\r\n            priceLabel.innerHTML = value;\r\n        }        \r\n    }\r\n\r\n    function formatPrice(val){\r\n\r\n        val = parseFloat(val).toFixed(2);\r\n\r\n        if(Number.isInteger(Number(val))){\r\n            \r\n            return parseFloat(val).toFixed(0);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n\r\n    function updateTotal(){\r\n\r\n        var currencyModifier = data.currency.getCurrentVal();   \r\n        \r\n        var valPurchase = data.valCompra * currencyModifier;\r\n\r\n        var valAfip = data.showAfip? valPurchase * 0.5 : 0;    \r\n        var valCorreo = data.showCorreo? app.config.gestionCorreo : 0;\r\n        var valFranquicia = data.showFranquicia? -25 * data.currencyUSD.getCurrentVal() : 0;\r\n        \r\n        var valAfipTemp = valAfip;\r\n        \r\n        if(data.showAfip && data.showFranquicia){\r\n            \r\n            // if afip is 10 usd, franchise will be -10\r\n            if(valFranquicia * -1 > valAfipTemp){\r\n                valFranquicia = -valAfipTemp;\r\n            }\r\n\r\n            valAfipTemp += valFranquicia;\r\n\r\n            if(valAfipTemp < 0){\r\n                valAfipTemp = 0;\r\n            }\r\n        }\r\n\r\n        var valTotal = valPurchase + valAfipTemp + valCorreo;\r\n\r\n        // console.log('data.valTotal', data.valTotal, data.valPesos, data.valAfip, data.valCorreo);\r\n\r\n        \r\n        if(data.currency.getId() == 'ARS'){\r\n            \r\n            // currencyConversionText will show peso to dollar\r\n\r\n            data.valCurrencyConversion = data.valCompra / data.currencyUSD.getCurrentVal();\r\n            \r\n            data.valCurrencyConversionText = 'U$S{1}';\r\n        }        \r\n        else{\r\n\r\n            // currencyConversionText will show peso from other currencies\r\n\r\n            data.valCurrencyConversion = valPurchase;\r\n            \r\n            data.valCurrencyConversionText = '${1}';\r\n        }\r\n\r\n        data.valCurrencyConversion = formatPrice(data.valCurrencyConversion);\r\n        data.valCurrencyConversionText =  data.valCurrencyConversionText.replace('{1}', data.valCurrencyConversion)\r\n        \r\n\r\n        data.valAfip = formatPrice(valAfip);\r\n        data.valCorreo = formatPrice(valCorreo);\r\n        data.valFranquicia = formatPrice(valFranquicia);\r\n        data.valTotal = formatPrice(valTotal);\r\n\r\n        if(data.valCompra == 0){\r\n            data.valTotal = '?';\r\n        }\r\n\r\n        log('Calculator - updateTotal() -', data.currency.getCurrentVal(), valPurchase, valAfipTemp, valCorreo, valTotal);\r\n    }\r\n\r\n    function runTests(){\r\n\r\n        console.log('<<<<<<<<<<<<<<<<< Calculator - runTests() - STARTED >>>>>>>>>>>>>>>>');\r\n\r\n        console.log('--------- TEST 1 ---------');\r\n\r\n        data.valCompra = 123.45;\r\n        data.currencyUSD.setCurrentVal(18.12);\r\n        data.gestionCorreo = 120;\r\n        data.valFranquicia = -25 * data.valDolar;\r\n\r\n        data.showAfip = true;\r\n        data.showCorreo = true;\r\n        data.showFranquicia = true;\r\n\r\n        updateTotal();\r\n\r\n        // force render\r\n        app.data.$mount();\r\n        \r\n        utils.assertEquals('currencyConversionText.innerHTML', currencyConversionText.innerHTML, \"$2236.91\");\r\n        utils.assertEquals('priceAfip.innerHTML', priceAfip.innerHTML, \"$1118.46\");\r\n        utils.assertEquals('priceCorreo.innerHTML', priceCorreo.innerHTML, \"$120\");\r\n        utils.assertEquals('priceFranquicia.innerHTML', priceFranquicia.innerHTML, \"$-453\");\r\n        utils.assertEquals('valTotalSpan.innerHTML', valTotalSpan.innerHTML, \"3022.37\");\r\n        \r\n\r\n        // get the total independently\r\n        var valPesos = data.valCompra * data.currencyUSD.getCurrentVal();\r\n        var valAfip = valPesos * 0.5;\r\n        var valCorreo = 120;\r\n        var valFranquicia = -25 * data.currencyUSD.getCurrentVal();\r\n\r\n        var valAfipTemp = valAfip + valFranquicia;\r\n\r\n        if(valAfipTemp < 0){\r\n            valAfipTemp = 0;\r\n        }\r\n        \r\n        var valTotal = valPesos + valAfipTemp + valCorreo;\r\n\r\n        utils.assertEquals('valPesos', valPesos, 2236.914);\r\n        utils.assertEquals('valAfip', valAfip, 1118.457);\r\n        utils.assertEquals('valFranquicia', valFranquicia, -453);\r\n        utils.assertEquals('valAfipTemp', valAfipTemp, 665.4570000000001);\r\n        utils.assertEquals('valTotal', valTotal, 3022.371);\r\n        \r\n        utils.assertEquals('data.valAfip', data.valAfip, formatPrice(valAfip));\r\n        utils.assertEquals('data.valFranquicia', data.valFranquicia, formatPrice(valFranquicia));\r\n        utils.assertEquals('data.valTotal', data.valTotal, formatPrice(valTotal));\r\n\r\n\r\n        console.log('--------- TEST 2 ---------');\r\n\r\n        data.valCompra = 42.42;\r\n        data.currency = data.currencyEUR;\r\n        data.currencyEUR.setCurrentVal(22.54);\r\n        data.gestionCorreo = 120;\r\n        data.valFranquicia = 0;\r\n\r\n        data.showAfip = true;\r\n        data.showCorreo = true;\r\n        data.showFranquicia = false;\r\n\r\n        updateTotal();\r\n\r\n        // force render\r\n        app.data.$mount();\r\n\r\n        utils.assertEquals('currencyConversionText.innerHTML', currencyConversionText.innerHTML, \"$956.15\");\r\n        utils.assertEquals('priceAfip.innerHTML', priceAfip.innerHTML, \"$478.07\");\r\n        utils.assertEquals('priceCorreo.innerHTML', priceCorreo.innerHTML, \"$120\");\r\n        utils.assertEquals('priceFranquicia.innerHTML', priceFranquicia.innerHTML, \"$0\");\r\n        utils.assertEquals('valTotalSpan.innerHTML', valTotalSpan.innerHTML, \"1554.22\");\r\n        \r\n\r\n        // get the total independently\r\n        valPesos = data.valCompra * data.currency.getCurrentVal();\r\n        valAfip = valPesos * 0.5;\r\n        valCorreo = 120;\r\n        valFranquicia = 0;\r\n\r\n        valAfipTemp = valAfip + valFranquicia;\r\n\r\n        if(valAfipTemp < 0){\r\n            valAfipTemp = 0;\r\n        }\r\n\r\n        valTotal = valPesos + valAfipTemp + valCorreo;\r\n\r\n        utils.assertEquals('valPesos', valPesos, 956.1468);\r\n        utils.assertEquals('valAfip', valAfip, 478.0734);\r\n        utils.assertEquals('valFranquicia', valFranquicia, 0);\r\n        utils.assertEquals('valAfipTemp', valAfipTemp, valAfip);\r\n        utils.assertEquals('valTotal', valTotal, 1554.2202);\r\n        \r\n        utils.assertEquals('data.valAfip', data.valAfip, formatPrice(valAfip));\r\n        utils.assertEquals('data.valFranquicia', data.valFranquicia, formatPrice(valFranquicia));\r\n        utils.assertEquals('data.valTotal', data.valTotal, formatPrice(valTotal));\r\n\r\n\r\n        console.log('<<<<<<<<<<<<<<<<< Calculator - runTests() - ENDED >>>>>>>>>>>>>>>>');\r\n    }\r\n\r\n}\r\n\r\n","import utils from '../utils';\r\nimport app from '../app';\r\nimport CurrencyUpdater from './currencyUpdater';\r\n\r\nvar Currency = function(id){\r\n\r\n    log('Currency() - id:', id);\r\n\r\n    var self = this;\r\n    var _index = -1;\r\n    var id = id;\r\n    var name = '-1';\r\n    var currentVal = 0;\r\n    var fallbackVal = -1;\r\n    var updatedVal = -1;\r\n    var customVal = -1;\r\n    var lastFallbackValDate = -1;    \r\n    var lastUpdateDate = -1;    \r\n    var lastCustomValDate = -1;\r\n    var _usesCustomVal = false;\r\n    var queryUrl = '';\r\n    var isSelected = false;\r\n    var currencyUpdater;\r\n\r\n    this.getName = function(){\r\n        return name;\r\n    };\r\n\r\n    this.getId = function(){\r\n        return id;\r\n    };\r\n    \r\n    this.getCurrentVal = function(){\r\n\r\n        log('Currency - getCurrentVal()', id, currentVal);\r\n\r\n        return currentVal;\r\n    }\r\n\r\n    this.setCurrentVal = function(val){\r\n\r\n        log('Currency - setCurrentVal()', id, val);\r\n\r\n        currentVal = val;\r\n\r\n        updateSelectOption();\r\n    }\r\n\r\n    this.setAutoMode = function (usesCustomVal){\r\n\r\n        log('Currency - setAutoMode()', id, usesCustomVal);\r\n\r\n        _usesCustomVal = usesCustomVal;\r\n\r\n        if(_usesCustomVal){\r\n\r\n            if(customVal == -1){\r\n                customVal = self.getCurrentVal();\r\n            }\r\n\r\n            lastCustomValDate = Date.now();\r\n\r\n            self.setCurrentVal(customVal);            \r\n        }\r\n        else{\r\n\r\n            if(updatedVal > -1){\r\n\r\n                self.setCurrentVal(updatedVal);\r\n            }\r\n            else{\r\n                log('Currency - setAutoMode() - using fallbackVal', id, usesCustomVal, fallbackVal);\r\n                self.setCurrentVal(fallbackVal);\r\n            }\r\n        }\r\n\r\n        self.save();\r\n    };\r\n\r\n    this.setCustomVal = function(val){\r\n\r\n        customVal = val;\r\n\r\n        self.setCurrentVal(customVal);\r\n\r\n        self.save();\r\n    };\r\n\r\n    this.setSelectedState = function(val){\r\n        isSelected = val;\r\n\r\n        if(isSelected){\r\n\r\n            if(id != 'ARS'){\r\n                currencyUpdater.wakeUp();\r\n            }            \r\n        }\r\n        else{\r\n            currencyUpdater.sleep();\r\n        }\r\n    };\r\n\r\n\r\n    this.getLastUpdateDate = function(){\r\n        return lastUpdateDate;\r\n    };\r\n\r\n    this.getLastUpdateDateReadable = function(){\r\n\r\n        if(lastUpdateDate == -1){\r\n            return '-1';\r\n        }\r\n\r\n        return new Date(lastUpdateDate).toLocaleString('es-AR');\r\n    };\r\n    \r\n    this.getHasCustomVal = function(){\r\n        return _usesCustomVal;\r\n    };\r\n\r\n    this.getIndex = function(){\r\n        return _index;\r\n    }\r\n\r\n    this.load = function(index){\r\n\r\n        _index = index;\r\n\r\n        // load from config.js\r\n        var data = app.config.currencies[_index];\r\n\r\n        log('Currency - load() data.id', data.id);\r\n\r\n        \r\n        if(id != data.id){\r\n\r\n            var errorMsg = 'Currency - load() - expected id: \"' + id + '\" doesnt match data.id: \"' + data.id + '\"';\r\n            log(errorMsg);\r\n            throw new Error(errorMsg);\r\n        }\r\n\r\n        name = data.name;\r\n        fallbackVal = data.val;\r\n        lastUpdateDate = data.lastUpdate;\r\n        lastFallbackValDate = data.lastUpdate;\r\n        queryUrl = app.config.currencyQueryUrl.replace('{1}', id);\r\n\r\n        currencyUpdater = new CurrencyUpdater(id, queryUrl, onUpdateReady);\r\n\r\n        self.setCurrentVal(fallbackVal);\r\n\r\n        \r\n\r\n        // load from localStorage\r\n        var savedData = utils.getSavedItem(id);\r\n        \r\n        if(!savedData || savedData.id != id){\r\n            log('Currency - load() - no saved data', savedData, id);\r\n            return;\r\n        }\r\n\r\n        updatedVal = savedData.updatedVal;\r\n        customVal = savedData.customVal;\r\n        lastUpdateDate = savedData.lastUpdateDate;\r\n        lastCustomValDate = savedData.lastCustomValDate;\r\n        _usesCustomVal = savedData.usesCustomVal;\r\n\r\n        log('Currency - load() - loading:', updatedVal, customVal, lastUpdateDate, lastCustomValDate, _usesCustomVal);\r\n        \r\n        if(_usesCustomVal == false){\r\n\r\n            if(updatedVal > -1 &&\r\n                lastUpdateDate > -1 &&\r\n                lastUpdateDate > lastFallbackValDate){\r\n        \r\n                log('Currency - load() - loaded successfully. setting updatedVal:', updatedVal);\r\n                self.setCurrentVal(updatedVal);\r\n            }\r\n            else{\r\n                log('Currency - load() - FAILED to load:', id, updatedVal);\r\n            }\r\n        }\r\n        else{\r\n\r\n            if(customVal > -1){\r\n                self.setCurrentVal(customVal);\r\n            }\r\n            else{\r\n                // we keep using the fallbackVal that we just set\r\n                _usesCustomVal = false;\r\n\r\n                self.save();\r\n            }            \r\n        };        \r\n        \r\n    };\r\n\r\n\r\n    this.save = function(){\r\n\r\n        log('Currency - save()', id);\r\n\r\n        localStorage.setItem(id, getSaveData());\r\n    };\r\n\r\n    function getSaveData(){\r\n\r\n        var data = \r\n            {id:id, \r\n            updatedVal:updatedVal, \r\n            customVal:customVal, \r\n            lastUpdateDate:lastUpdateDate, \r\n            lastCustomValDate:lastCustomValDate, \r\n            usesCustomVal:_usesCustomVal};\r\n\r\n        return JSON.stringify(data);\r\n    }\r\n\r\n    this.update = function(){\r\n\r\n        log('Currency - update()', id);\r\n\r\n        currencyUpdater.update();\r\n    };\r\n\r\n    function updateSelectOption(){\r\n\r\n        log('Currency - updateSelectOption() - ' + id);\r\n\r\n        switch(id){\r\n\r\n            case 'USD':\r\n                app.data.selectOptionUSD = 'USD (Dólar) - $' + String(self.getCurrentVal()) + (self.getHasCustomVal() ? '*' : '');\r\n                break;\r\n            case 'EUR':\r\n                app.data.selectOptionEUR = 'EUR (Euro) - $' + String(self.getCurrentVal()) + (self.getHasCustomVal() ? '*' : '');\r\n                break;\r\n            case 'GBP':\r\n                app.data.selectOptionGBP = 'GBP (Libra) - $' + String(self.getCurrentVal()) + (self.getHasCustomVal() ? '*' : '');\r\n                break;\r\n        }\r\n    }\r\n\r\n    \r\n    function onUpdateReady(update){\r\n\r\n        log('Currency - onUpdateReady()', update.id, update.value, update.date);\r\n        \r\n\r\n        if(update.id != id){\r\n\r\n            log('Currency - onUpdateReady() - ids dont match:', update.id, id);\r\n            return;\r\n        }\r\n\r\n        if(update.date > lastUpdateDate){\r\n            \r\n            lastUpdateDate = update.date;\r\n            updatedVal = update.value;\r\n    \r\n            log('Currency - onUpdateReady() - success', id);\r\n    \r\n            if(!_usesCustomVal){\r\n                self.setCurrentVal(updatedVal);\r\n            }\r\n    \r\n            self.save();\r\n\r\n            app.currencyUpdated.dispatch(self);\r\n        }\r\n        else{\r\n            log('Currency - onUpdateReady() - update.date is older than:', getLastUpdateDate());\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Currency;","import app from '../app';\r\n\r\nimport utils from '../utils';\r\n\r\n\r\nvar CurrencyManager = function(){\r\n\r\n    log('CurrencyManager()');\r\n\r\n    \r\n\r\n    function init(){\r\n\r\n        log('CurrencyManager - init()');\r\n\r\n        // don't include ARS (as it shouldn't be in Configuración)\r\n        app.data.currencies.push(app.data.currencyUSD, app.data.currencyEUR, app.data.currencyGBP); \r\n\r\n        app.data.currencyUSD.load(0);\r\n        app.data.currencyEUR.load(1);\r\n        app.data.currencyGBP.load(2);\r\n        app.data.currencyARS.load(3);\r\n\r\n        \r\n\r\n        var selectedCurrencyId = utils.getSavedItem('selectedCurrencyId');\r\n\r\n        if(selectedCurrencyId == null || selectedCurrencyId == undefined || selectedCurrencyId == ''){\r\n            \r\n            selectedCurrencyId = app.config.defaultCurrencyId;\r\n\r\n            ga('send', {\r\n                hitType: 'event',\r\n                eventCategory: 'Settings',\r\n                eventAction: 'loaded',\r\n                eventLabel: 'selectedCurrencyId',\r\n                eventValue: selectedCurrencyId\r\n            });\r\n        }\r\n\r\n        app.data.currency = getCurrencyById(selectedCurrencyId);\r\n\r\n        $('#currency-select').prop('selectedIndex', app.data.currency.getIndex());\r\n\r\n        app.data.currency.setSelectedState(true);\r\n\r\n        log('CurrencyManager - init() - app.data.currency.getId():', app.data.currency.getId());\r\n\r\n\r\n        app.currencySliderToggled.add(onCurrencySliderToggled);\r\n        app.currencyModified.add(onCurrencyModified);\r\n    }\r\n\r\n    this.updateCurrency = function (id){\r\n\r\n        var currency = getCurrencyById(id);\r\n\r\n        if(currency){\r\n            currency.update();\r\n        }\r\n    };\r\n\r\n    function onCurrencySliderToggled(data){\r\n\r\n        var currency = getCurrencyById(data.id);\r\n        \r\n        if(currency){\r\n            currency.setAutoMode(data.value);\r\n        }\r\n    }\r\n\r\n    function onCurrencyModified(data){\r\n\r\n        var currency = getCurrencyById(data.id);\r\n\r\n        if(currency){\r\n            currency.setCustomVal(data.value);\r\n        }\r\n    }\r\n\r\n\r\n    function getCurrencyById(id){\r\n\r\n        log('CurrencyManager - getCurrencyById()', id);\r\n\r\n        switch(id){\r\n            \r\n            case 'USD':\r\n                return app.data.currencyUSD;\r\n            \r\n            case 'EUR':\r\n                return app.data.currencyEUR;\r\n            \r\n            case 'GBP':\r\n                return app.data.currencyGBP;\r\n            \r\n            case 'ARS':\r\n                return app.data.currencyARS;\r\n        }\r\n\r\n        throw new Error('CurrencyManager - getCurrencyById() - unrecognized currency id:' + id);\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    this.onCurrencySelected =  function(e){\r\n\r\n        \r\n        \r\n        if(e == null || e.target.selectedIndex == undefined){\r\n            throw new Error('CurrencyManager - onCurrencySelected()');\r\n        }\r\n\r\n        var id = app.config.currencies[e.target.selectedIndex].id;\r\n        \r\n        log('CurrencyManager - onCurrencySelected()', id);\r\n\r\n        var selectedCurrency = getCurrencyById(id);\r\n        \r\n        if(!selectedCurrency || selectedCurrency == app.data.currency){\r\n            return;\r\n        }\r\n\r\n        app.data.currency.setSelectedState(false);\r\n\r\n        app.data.currency = selectedCurrency;\r\n\r\n        app.data.currency.setSelectedState(true);\r\n\r\n        app.currencySelected.dispatch();\r\n\r\n        app.saveSettingRequested.dispatch({name:'selectedCurrencyId', value:id});\r\n    }\r\n\r\n    this.onCurrencyModified = function(event, id){\r\n\r\n\r\n    };\r\n\r\n    init();\r\n}\r\n\r\nexport default CurrencyManager;","/*\r\nMIT License\r\n\r\nCopyright (c) 2017 Ivo Cass\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\nimport app from '../app';\r\nimport utils from '../utils';\r\n\r\nvar CurrencyUpdater = function(id, queryUrl, onUpdateSuccessful, onUpdateError){\r\n    \r\n    log('CurrencyUpdater() - id:', id, 'queryUrl:', queryUrl);\r\n\r\n    var req = new XMLHttpRequest();\r\n    var timerId = '';\r\n    var sleeping = true;\r\n\r\n    this.wakeUp = function(){\r\n        \r\n        log('CurrencyUpdater() - wakeUp()', id, app.config.updateCurrency);\r\n\r\n        if(!app.config.updateCurrency){\r\n            return;\r\n        }\r\n\r\n        sendRequest();\r\n\r\n        clearInterval(timerId);\r\n        timerId = setInterval(sendRequest, app.config.currencyUpdateInterval);\r\n        sleeping = false;\r\n    }\r\n\r\n    this.sleep = function(){\r\n        clearInterval(timerId);\r\n\r\n        timerId = '';\r\n        sleeping = true;\r\n    };\r\n\r\n    this.update = function(){\r\n        sendRequest();\r\n    };\r\n\r\n    function sendRequest(){\r\n\r\n        log('CurrencyUpdater() - sendRequest() - queryUrl:', queryUrl);\r\n\r\n        req.open('GET', queryUrl, true);\r\n        req.send();\r\n    }\r\n\r\n    req.onreadystatechange = function(){\r\n        \r\n        log('CurrencyUpdater() - req.onreadystatechange()', id, 'req.readyState:', req.readyState);\r\n\r\n        if (req.readyState === XMLHttpRequest.DONE) {\r\n\r\n            log('CurrencyUpdater() - req.onreadystatechange() - req.status:', req.status)\r\n\r\n            if (req.status === 200) {\r\n\r\n                try {\r\n                    var xmlDoc = utils.stringToXML(req.responseText);                    \r\n                    var rate = xmlDoc.documentElement.getElementsByTagName('Rate')[0].childNodes[0].nodeValue;\r\n\r\n                    if(!isNaN(rate) && rate > 0){\r\n\r\n                        rate = parseFloat(rate).toFixed(2);\r\n\r\n                        onUpdateSuccessful({id:id, value:rate, date:Date.now()});\r\n                    }                    \r\n                }\r\n                catch(err) {\r\n\r\n                    log('CurrencyUpdater() - req.onreadystatechange() - error caught! - reason', err.name)\r\n\r\n                    if(onUpdateError){\r\n\r\n                        onUpdateError(\"error getting rate\");\r\n                    }\r\n                    else{\r\n                        console.log('CurrencyUpdater - error getting rate', err);\r\n                    }\r\n                }\r\n                \r\n            } else {\r\n                if(onUpdateError){\r\n\r\n                    onUpdateError(\"error getting currency\");\r\n                }\r\n                else{\r\n                    console.log('CurrencyUpdater - error getting currency');\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport default CurrencyUpdater;\r\n\r\n/*\r\n\r\nsample responseText\r\n\r\n<query xmlns:yahoo=\"http://www.yahooapis.com/v1/base.rng\" yahoo:count=\"1\" yahoo:created=\"2017-08-11T18:07:52Z\" yahoo:lang=\"en-US\">\r\n    <diagnostics>\r\n        <url execution-start-time=\"1\" execution-stop-time=\"2\" execution-time=\"1\"><![CDATA[http://www.datatables.org/yahoo/finance/yahoo.finance.xchange.xml]]></url>\r\n        <publiclyCallable>true</publiclyCallable>\r\n        <cache execution-start-time=\"4\" execution-stop-time=\"4\" execution-time=\"0\" method=\"GET\" type=\"MEMCACHED\"><![CDATA[e1b28fd8ab8a7bf21a52162f420f1447]]></cache>\r\n        <url execution-start-time=\"4\" execution-stop-time=\"5\" execution-time=\"1\"><![CDATA[http://download.finance.yahoo.com/d/quotes.csv?s=USDARS=X&amp;f=snl1d1t1ab]]></url>\r\n        <query execution-start-time=\"4\" execution-stop-time=\"5\" execution-time=\"1\"><![CDATA[select * from csv where url='http://download.finance.yahoo.com/d/quotes.csv?s=USDARS=X&amp;f=snl1d1t1ab' and columns='Symbol,Name,Rate,Date,Time,Ask,Bid']]></query>\r\n        <javascript execution-start-time=\"2\" execution-stop-time=\"5\" execution-time=\"2\" instructions-used=\"18668\" table-name=\"yahoo.finance.xchange\" />\r\n        <user-time>6</user-time>\r\n        <service-time>2</service-time>\r\n        <build-version>2.0.164</build-version>\r\n    </diagnostics>\r\n    <results>\r\n        <rate id=\"USDARS\">\r\n            <Name>USD/ARS</Name>\r\n            <Rate>17.7150</Rate>\r\n            <Date>8/11/2017</Date>\r\n            <Time>5:50pm</Time>\r\n            <Ask>17.7200</Ask>\r\n            <Bid>17.7150</Bid>\r\n        </rate>\r\n    </results>\r\n</query>\r\n*/"," /*\r\nMIT License\r\n\r\nCopyright (c) 2017 Ivo Cass\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\n/*\r\n\r\nabout: lightweight logger\r\nauthor: ivocass\r\n\r\nversion: 0.11\r\nlast updated: 20170908\r\n\r\n-description:\r\nstores lines in an array, then dumps to console upon request.\r\nwhen 'maxEntries' is reached, it starts storing from index 0 again.\r\n\r\n-usage:\r\nlog('some message');\r\nlog(isValid, array.length, moreParams);\r\nthen in the console: logger.show()\r\n\r\n */\r\n\r\nvar Logger = function(){\r\n\r\n    var self = this;\r\n    var enabled = true;\r\n    var maxEntries = 2000;\r\n\r\n    \r\n    var logHistory = [];\r\n    var logHistoryIndex = 0;\r\n    var entryId = 0;\r\n    \r\n\r\n    function init(){\r\n\r\n        window.logger = self;\r\n\r\n        window.log = logEntry;\r\n    }\r\n\r\n    function logEntry(){\r\n\r\n        var args = Array.prototype.slice.call(arguments).toString();\r\n\r\n        logHistory[logHistoryIndex] = String(entryId) + ') ' + args;\r\n\r\n        logHistoryIndex++;\r\n        entryId++;\r\n\r\n        if(logHistoryIndex == maxEntries){\r\n            logHistoryIndex = 0;\r\n        }\r\n    }\r\n\r\n    this.setMaxEntries = function(value){\r\n        maxEntries = value;\r\n    };\r\n\r\n    this.disable = function(){\r\n        enabled = false;\r\n    };\r\n\r\n\r\n    this.show = function(){\r\n\r\n        console.log('---------------- LOG BEGINS ----------------');\r\n\r\n        // TODO: if logHistory.length > logHistoryIndex, start from logHistoryIndex + 1, then go from 0 to logHistoryIndex\r\n        for(var i = 0; i < logHistory.length; i++){\r\n\r\n            console.log(logHistory[i]);\r\n        }\r\n\r\n        console.log('---------------- LOG ENDS ------------------');\r\n    };\r\n\r\n\r\n    init();\r\n}\r\n\r\nexport default new Logger();\r\n\r\n","/*\r\nMIT License\r\n\r\nCopyright (c) 2017 Ivo Cass\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\nimport app from './app';\r\nimport utils from './utils';\r\n\r\nexport default function Settings(){\r\n\r\n    var self = this;\r\n    var dolarInputCustom;\r\n    \r\n    \r\n    function init(){\r\n\r\n        \r\n        var showInfoIcons = utils.getSavedItem('showInfoIcons');\r\n        var showCheckboxes = utils.getSavedItem('showCheckboxes');\r\n        var showFranquicia = utils.getSavedItem('showFranquicia');\r\n        var alternativeDesignEnabled = utils.getSavedItem('alternativeDesignEnabled');\r\n\r\n        \r\n\r\n        dolarInputCustom = $('#dolar-input-custom').get(0);\r\n        \r\n        app.valCompra = app.config.defaultPurchase;\r\n        \r\n        // it may be null, true, false\r\n        if(alternativeDesignEnabled === null) alternativeDesignEnabled = app.data.alternativeDesignEnabled; // set to default\r\n        app.data.alternativeDesignEnabled = alternativeDesignEnabled;\r\n        $('#sliderToggleDesign').prop('checked', app.data.alternativeDesignEnabled);\r\n\r\n        ga('send', {\r\n            hitType: 'event',\r\n            eventCategory: 'Settings',\r\n            eventAction: 'loaded',\r\n            eventLabel: 'alternativeDesignEnabled',\r\n            eventValue: app.data.alternativeDesignEnabled\r\n        });\r\n\r\n        loadMainColor();\r\n\r\n        // it may be null, true, false\r\n        if(showInfoIcons === null) showInfoIcons = app.data.showInfoIcons; // set to default\r\n        app.data.showInfoIcons = showInfoIcons;\r\n        $('#sliderToggleInfo').prop('checked', app.data.showInfoIcons);\r\n\r\n        // it may be null, true, false\r\n        if(showCheckboxes === null) showCheckboxes = app.data.showCheckboxes; // set to default\r\n        app.data.showCheckboxes = showCheckboxes;\r\n        $('#sliderToggleCheckboxes').prop('checked', app.data.showCheckboxes);\r\n        \r\n\r\n        if(showFranquicia !== null && (showFranquicia === true || showFranquicia === false)){\r\n            app.data.showFranquicia = showFranquicia;\r\n        }\r\n\r\n        app.saveSettingRequested.add(onSaveSettingRequested);\r\n\r\n    }\r\n\r\n    this.toggleDesign = function (){\r\n\r\n        app.data.alternativeDesignEnabled = $('#sliderToggleDesign').prop('checked');\r\n\r\n        this.setMainColor(app.data.mainColor);\r\n\r\n        localStorage.setItem('alternativeDesignEnabled',  app.data.alternativeDesignEnabled);\r\n    };\r\n\r\n    // todo: is 'important' necessary?\r\n    this.setMainColor = function(color){\r\n\r\n        log('Settings - setMainColor() color:', color)\r\n\r\n        $(document.body).css('background-color', color, 'important');\r\n        $('#app').css('background-color', color, 'important');\r\n        $('#settings .settings-header').css('background-color', color, 'important');\r\n        $('#infoModal .modal-header').css('background-color', color, 'important');\r\n        \r\n        // dont change when on the welcome screen\r\n        if(app.data.hasAcceptedTerms){\r\n            $('#termsModal .modal-header').css('background-color', color, 'important');\r\n            $('#terms-ok-btn').css('background-color', color, 'important');\r\n        }\r\n        \r\n        // $('#contact-link').css('color', color, 'important');        \r\n        $('.checkbox-check').css('color', color, 'important');\r\n        // $('#price-compra-input').css('color', color, 'important');\r\n        // $('#compra-stuff .form-control').css('color', color, 'important');\r\n        // $('.arrow .fa-caret-down').css('color', color, 'important');\r\n        $('#settings .panel-left').css('background-color', color, 'important');\r\n\r\n\r\n        if(app.data.alternativeDesignEnabled){\r\n            $('#section-purchase').css('background-color', color);\r\n            $('#section-expenses').css('background-color', color);\r\n            $('#section-total').css('background-color', 'white');\r\n            $('#section-total').css('color', color);\r\n\r\n            $('#app-links button').css('color', color);\r\n        }\r\n        else{\r\n            $('#section-purchase').css('background-color', utils.changeColorLuminance(color, -app.config.colorLuminanceChange));\r\n            $('#section-expenses').css('background-color', color);\r\n            $('#section-total').css('background-color', utils.changeColorLuminance(color, app.config.colorLuminanceChange));\r\n\r\n            $('#section-total').css('color', 'white');\r\n            $('#app-links button').css('color', 'white');           \r\n        }\r\n\r\n\r\n        localStorage.setItem('mainColor', color);\r\n\r\n        app.data.mainColor = color;\r\n    };\r\n\r\n\r\n    this.onCurrencyModified = function(event, id){\r\n        \r\n        if(!event || !event.srcElement){\r\n\r\n            throw new Error('Settings - onCurrencyModified() - \"!event || !event.srcElement\"');\r\n        }\r\n\r\n        var val = event.srcElement.value;\r\n\r\n        if(isNaN(val)){\r\n            $(event.srcElement).addClass('input-error');\r\n            return;\r\n        }\r\n\r\n        val = Number(val);\r\n\r\n        if(val <= 0){\r\n            $(event.srcElement).addClass('input-error');\r\n        }\r\n        else{\r\n            $(event.srcElement).removeClass('input-error');\r\n\r\n            app.currencyModified.dispatch({id:id, value:val});\r\n            \r\n            app.settingsChanged.dispatch();\r\n        }\r\n    };\r\n\r\n    this.toggleCustomCurrency = function(id){\r\n        \r\n        var signalData = {id:id, value:false};\r\n\r\n        // if 'checked' is true, 'value' is false (it affects 'usesCustomValue')\r\n        if(!$('#sliderToggle' + id).prop('checked')){\r\n        \r\n            signalData.value = true;\r\n        }\r\n\r\n        app.currencySliderToggled.dispatch(signalData);\r\n\r\n        app.settingsChanged.dispatch();\r\n    };\r\n\r\n    this.toggleInfoIcons = function(){\r\n\r\n        app.data.showInfoIcons = $('#sliderToggleInfo').prop('checked');\r\n         \r\n        \r\n        localStorage.setItem('showInfoIcons', app.data.showInfoIcons);\r\n    };\r\n\r\n    this.toggleCheckboxes = function(){\r\n\r\n        app.data.showCheckboxes = $('#sliderToggleCheckboxes').prop('checked');         \r\n        \r\n        localStorage.setItem('showCheckboxes', app.data.showCheckboxes);\r\n    };\r\n    \r\n\r\n\r\n    function loadMainColor(){\r\n        \r\n        var mainColor = utils.getSavedItem('mainColor');\r\n\r\n        if(mainColor !== null){\r\n            \r\n            self.setMainColor(mainColor);\r\n\r\n            ga('send', {\r\n                hitType: 'event',\r\n                eventCategory: 'Settings',\r\n                eventAction: 'loaded',\r\n                eventLabel: 'mainColor',\r\n                eventValue: mainColor\r\n            });\r\n              \r\n        }\r\n        else{\r\n            self.setMainColor(app.config.mainColor);\r\n        }\r\n    }\r\n\r\n    function onSaveSettingRequested(setting){\r\n        localStorage.setItem(setting.name, setting.value);\r\n    }\r\n\r\n    init();\r\n}","/*\r\nMIT License\r\n\r\nCopyright (c) 2017 Ivo Cass\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\n//_____________________________\r\n\r\n/**\r\n* author: ivocass\r\n* date created: 2011\r\n* date modified: 20170810\r\n* description: lightweight and awesome signal. ported from AS3.\r\n* version: 0.13\r\n* \r\n*/\r\nexport default function Signal(){\r\n\t\r\n\tvar listeners = [];\r\n\tvar amount = 0;\r\n\t\r\n\tvar stepping = false;\r\n\t\r\n\tvar hasColdListeners = false;\r\n\t\r\n\tthis.destroy = function(){\r\n\r\n\t\tfor (var i = 0; i < listeners.length; i++) \r\n\t\t{\r\n\t\t\tlisteners[i].callbackFunction = null;\r\n\t\t}\r\n\t\t\r\n\t\tlisteners = null;\r\n\t\tamount = 0;\r\n\t}\r\n\t\r\n\tthis.reset = function(){\r\n\r\n\t\tthis.destroy();\r\n\t\t\r\n\t\tlisteners = [];\r\n\t\t\r\n\t\tstepping = false;\r\n\t\thasColdListeners = false;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tthis.add = function(callback, removeOnFirstCallback = false)\r\n\t{\r\n\t\tif (getListenerIndex(callback) > -1)\r\n\t\t{\r\n\t\t\tthrow new Error(\"Attempt to add a callback twice.\");\r\n\t\t}\r\n\t\t\r\n\t\tvar listener = new SignalListener(callback);\r\n\t\tlistener.removeOnFirstCallback = removeOnFirstCallback;\r\n\t\t\r\n\t\tlisteners.push(listener);\r\n\t\tamount++;\r\n\t}\r\n\t\r\n\t\r\n\tthis.rem = function(callback, safeRemove = false){\r\n\r\n\t\tvar index = getListenerIndex(callback);\r\n\t\t\r\n\t\tif (index == -1)\r\n\t\t{\r\n\t\t\tif (safeRemove)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthrow new Error(\"Attempt to remove an unregistered callback.\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (stepping)\r\n\t\t{\r\n\t\t\tlisteners[index].isCold = true;\r\n\t\t\tlisteners[index].callbackFunction = null;\r\n\t\t\t\r\n\t\t\thasColdListeners = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlisteners.splice(index, 1);\r\n\t\t\tamount--;\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar getListenerIndex =  function(callback){\r\n\r\n\t\tfor (var i = 0; i < amount; i++) \r\n\t\t{\r\n\t\t\tif (listeners[i].callbackFunction == callback)\r\n\t\t\t{\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn -1;\r\n\t}\r\n\t\r\n\tthis.dispatch = function(param = null){\r\n\t\t\r\n\t\tif (stepping)\r\n\t\t{\r\n\t\t\tthrow new Error(\"Attempt to dispatch a signal while stepping.\");\r\n\t\t}\r\n\t\t\r\n\t\tstepping = true;\r\n\t\t\r\n\t\tfor (var i = 0; i < amount; i++) \r\n\t\t{\r\n\t\t\tvar listener = listeners[i];\r\n\t\t\t\r\n\t\t\tif (listener.isCold) continue;\r\n\t\t\t\r\n\t\t\tif (listener.paramsRequired == 0)\r\n\t\t\t{\r\n\t\t\t\tlistener.callbackFunction();\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\tif (listener.paramsRequired == 1)\r\n\t\t\t{\r\n\t\t\t\tlistener.callbackFunction(param);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\tif (listener.paramsRequired == 2)\r\n\t\t\t{\r\n\t\t\t\tlistener.callbackFunction(this, param);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (listener.removeOnFirstCallback)\r\n\t\t\t{\r\n\t\t\t\tlistener.callbackFunction = null;\r\n\t\t\t\tlistener.isCold = true;\r\n\t\t\t\thasColdListeners = true;\r\n\t\t\t}\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif (hasColdListeners)\r\n\t\t{\r\n\t\t\tfor (i = amount - 1; i > -1; i--) \r\n\t\t\t{\r\n\t\t\t\tif (listeners[i].isCold)\r\n\t\t\t\t{\r\n\t\t\t\t\tlisteners.splice(i, 1);\r\n\t\t\t\t\tamount--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\thasColdListeners = false;\r\n\t\t}\r\n\t\t\r\n\t\tstepping = false;\r\n\t}\r\n\t\r\n}\r\n\r\nvar SignalListener = function(callbackFunction){\r\n\r\n\tthis.callbackFunction = callbackFunction;\r\n\r\n\tthis.removeOnFirstCallback = false;\r\n\r\n\tthis.isCold = false;\r\n\r\n\tthis.paramsRequired = callbackFunction.length; // 0:none, 1:param, 2:signal and param\r\n\r\n}"," /*\r\nMIT License\r\n\r\nCopyright (c) 2017 Ivo Cass\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\nimport app from './app';\r\nimport utils from './utils';\r\n\r\nexport default function TermsMgr(){\r\n    \r\n    log('TermsMgr()');\r\n\r\n    function init(){\r\n\r\n        utils.loadText('assets/terms.txt').then((txt) => {\r\n\r\n            log('TermsMgr() - txt loaded', txt.length);\r\n\r\n            app.data.termsAndConditions = txt;\r\n        });\r\n\r\n        var hasAcceptedTerms = utils.getSavedItem('hasAcceptedTerms');\r\n\r\n        log('TermsMgr() - hasAcceptedTerms:', hasAcceptedTerms);\r\n\r\n        if(hasAcceptedTerms){\r\n            app.data.hasAcceptedTerms = true;\r\n        }\r\n    }\r\n\r\n    this.onTermsCheckboxClicked = function(){\r\n\r\n        if($('#termsCheckbox').prop('checked')){\r\n\r\n            $('#btnWelcomeContinue').removeClass('disabled');\r\n        }\r\n        else{\r\n            $('#btnWelcomeContinue').addClass('disabled');\r\n        }\r\n    };\r\n\r\n    this.onWelcomeContinueClicked = function(){\r\n\r\n        if($('#termsCheckbox').prop('checked')){\r\n\r\n            $('#welcome').addClass('d-none');\r\n\r\n            app.data.hasAcceptedTerms = true;\r\n\r\n            localStorage.setItem('hasAcceptedTerms', true);\r\n        }\r\n        else{\r\n            // alert('');\r\n        }\r\n    };\r\n    \r\n    init();\r\n}\r\n"," /*\r\nMIT License\r\n\r\nCopyright (c) 2017 Ivo Cass\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\n\r\n\r\nvar Utils = function(){\r\n    \r\n    this.isBrowser = function(name){\r\n\r\n        return navigator.userAgent.indexOf(name) > -1;\r\n    };\r\n\r\n    this.assertEquals = function(name, currentVal, expectedVal){\r\n\r\n        var isSuccessful = currentVal === expectedVal ? true : false;\r\n\r\n        if(isSuccessful){\r\n            console.log('assertEquals()', 'SUCCESS', name, currentVal);\r\n        }\r\n        else{\r\n            console.log('assertEquals()', 'ERROR', name, 'current/expected:', currentVal, '/', expectedVal);\r\n        }        \r\n\r\n        if(!isSuccessful){\r\n           console.log('ERROR ------------------------------------------');\r\n           console.log('|            LAST TEST FAILED =(');\r\n           console.log('ERROR ------------------------------------------');\r\n        }\r\n    };\r\n\r\n    this.getSavedItem = function(name){\r\n\r\n        log('Utils - getSavedItem()', name);\r\n\r\n        var item = localStorage.getItem(name);\r\n\r\n        // console.log('utils.getSavedItem() - name:', name, ' - item:', item);\r\n\r\n        if(item !== null && item !== undefined && item !== 'undefined'){\r\n            \r\n            switch(true){\r\n                \r\n                case item === 'false':\r\n                    return false;\r\n                \r\n                case item === 'true':\r\n                    return true;\r\n                \r\n                case !isNaN(item):\r\n                    return Number(item);\r\n\r\n                case typeof item == 'string':\r\n                    try {\r\n                        var data = JSON.parse(item);\r\n\r\n                        if(data != null){\r\n                            return data;\r\n                        }\r\n                    }\r\n                    catch(err) {\r\n                        return item;\r\n                    }\r\n                break;\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    \r\n    this.loadText = function (url){\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            var xhr = new XMLHttpRequest();\r\n\r\n            if (xhr.overrideMimeType) {\r\n                xhr.overrideMimeType('text/plain; charset=ISO-8859-1');\r\n            }\r\n            \r\n            xhr.open('GET', url, true);\r\n\r\n            xhr.onload = function () {\r\n                if (this.status >= 200 && this.status < 300) {\r\n                    resolve(xhr.response);\r\n                } else {\r\n                    reject({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                    });\r\n                }\r\n            };\r\n\r\n            xhr.onerror = function () {\r\n                reject({\r\n                    status: this.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            };\r\n\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    // returns an XML DOM document\r\n    this.stringToXML = function(text){\r\n\r\n        if(text){\r\n            return new DOMParser().parseFromString(text, \"text/xml\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // lum should represent a percentage (e.g. for 5%, provide 0.05. negative values to darken)\r\n    this.changeColorLuminance = function(hex, lum) {\r\n\r\n        // Validate hex string\r\n        hex = String(hex).replace(/[^0-9a-f]/gi, \"\");\r\n        if (hex.length < 6) {\r\n        hex = hex.replace(/(.)/g, '$1$1');\r\n        }\r\n        lum = lum || 0;\r\n\r\n        // Convert to decimal and change luminosity\r\n        var rgb = \"#\",\r\n        c;\r\n        for (var i = 0; i < 3; ++i) {\r\n            c = parseInt(hex.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            rgb += (\"00\" + c).substr(c.length);\r\n        }\r\n\r\n        return rgb;\r\n    }\r\n}\r\n\r\nexport default new Utils();\r\n\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}